create table worker
	(worker_id 		unsigned int AUTO_INCREMENT, 
	 worker_name		varchar(20) not null, 
	 worker_phone		varchar(20), 
	 worker_position		varchar(10),
	 manager_id		unsigned int,
	 resign			boolean,
	 primary key (worker_id),
	 foreign key (manager_id) references worker (worker_id)
	);

create table store
	(store_id			char(5), 
	 store_name		varchar(20) not null, 
	 store_address		varchar(50) not null, 
	 store_phone		char(20) not null,
	 primary key (store_id)
	);

create table prod_brand
	(brand_id			char(5), 
	 brand_name		varchar(20) not null, 
	 brand_address		varchar(50) not null, 
	 brand_phone		char(20) not null,
	 primary key (brand_id)
	);

create table product
	(prod_id			char(5), 
	 prod_name		varchar(40) not null,
	 wholesale_price		varchar(50) not null, // 생각이 필요함
	 retail_price		char(20) not null, // 생각이 필요함
	 brand_id			char(5),
	 primary key (store_id),
	 foreign key (worker_id) references worker (worker_id)
	);

create table inventory
	(inven_id			char(5), // product * store로 맞추면 됨
	 prod_id			char(5), 
	 store_id			char(5),
	 inventory		unsigned tinyint,
	 primary key (store_id),
	 foreign key (prod_id) references product (prod_id),
	 foreign key (prod_id) references product (prod_id)
	);

create table sale
	(sale_id			char(5),
	 sale_date_time		datetime,
	 store_id			char(5),
	 primary key (sale_id),
	 foreign key (store_id) references store (store_id)
	);

create table work_record
	(work_record		unsigned int AUTO_INCREMENT,
	 worker_ID		unsigned int not null, 
	 service_date		date, 
	 service_start_time		time,
	 service_end_time		time, 
	 primary key (work_record),
	 foreign key (worker_ID) references worker (worker_ID)
	);

create table work_for
	(work_id			unsigned int AUTO_INCREMENT,
	 worker_id		unsigned int, 
	 store_id			char(5),
	 employment_date		date,
	 hourly_wage		unsigned smallint,
	 primary key (work_id),
	 foreign key (worker_id) references worker (worker_id),
	 foreign key (store_id) references store (store_id)
	);

create table pay_record (
    pay_record_id INT AUTO_INCREMENT PRIMARY KEY,
    sale_id INT,
    pay_id INT,
    FOREIGN KEY (sale_id) REFERENCES sale(sale_id)
);


create table pay (
    pay_id INT AUTO_INCREMENT PRIMARY KEY,
    pay_name VARCHAR(20)
);


create table member (
    mem_id INT AUTO_INCREMENT PRIMARY KEY,
    mem_name VARCHAR(20),
    mem_phone VARCHAR(20),
    mee_code CHAR(15),
    mem_class ENUM('일반', 'VIP', 'VVIP')
);

CREATE TABLE saleforemember (
    salefor_id INT AUTO_INCREMENT PRIMARY KEY,
    save BOOL,
    sale_id INT,
    mem_id INT,
    FOREIGN KEY (sale_id) REFERENCES sale(sale_id),
    FOREIGN KEY (mem_id) REFERENCES member(mem_id)
);


CREATE TABLE save (
    save_id INT AUTO_INCREMENT PRIMARY KEY,
    point_save_time DATETIME,
    mem_point_id INT,
    salefor_id INT,
    FOREIGN KEY (mem_point_id) REFERENCES member_point(mem_point_id),
    FOREIGN KEY (salefor_id) REFERENCES saleforemember(salefor_id)
);


CREATE TABLE deduct (
    deduct_id INT AUTO_INCREMENT PRIMARY KEY,
    point_deduct_time DATETIME,
    deduct_point INT,
    mem_point_id INT,
    FOREIGN KEY (mem_point_id) REFERENCES member_point(mem_point_id)
);


CREATE TABLE member_point (
    mem_point_id INT AUTO_INCREMENT PRIMARY KEY,
    mem_id INT,
    point INT,
    FOREIGN KEY (mem_id) REFERENCES member(mem_id)
);




-- 재고 테이블
CREATE TABLE inventory (
    inven_id INT AUTO_INCREMENT PRIMARY KEY,
    inventory SMALLINT,
    prod_id INT,
    매장 ID INT,
    FOREIGN KEY (prod_id) REFERENCES product(prod_id)
);

-- 매장 테이블
CREATE TABLE store (
    store_id INT AUTO_INCREMENT PRIMARY KEY,
    store_name VARCHAR(20),
    store_address VARCHAR(100),
    store_phone VARCHAR(20)
);

-- 배송 테이블
CREATE TABLE delivery (
    delivery_id INT AUTO_INCREMENT PRIMARY KEY,
    delivery_date DATETIME,
    warehouse_id INT,
    driver_id INT,
    store_id INT,
    pur_id
    FOREIGN KEY (warehouse_id) REFERENCES warehouse(warehouse_id)
);

-- 배송기사 테이블
CREATE TABLE delivery_driver (
    driver_id INT AUTO_INCREMENT PRIMARY KEY,
    driver_name VARCHAR(20),
    driver_phone VARCHAR(100)
);

-- 매입 테이블
CREATE TABLE purchase (
    pur_id INT AUTO_INCREMENT PRIMARY KEY,
    pur_date_time DATETIME,
    store_id INT,
    FOREIGN KEY (store_id) REFERENCES store(store_id)
);

-- 매입내역 테이블
CREATE TABLE purchase_record (
    pur_record_id INT AUTO_INCREMENT PRIMARY KEY,
    pur_id INT,
    prod_id INT,
    quantity SMALLINT,
    FOREIGN KEY (pur_id) REFERENCES purchase(pur_id),
    FOREIGN KEY (prod_id) REFERENCES product(prod_id)
);

-- 매입환불 테이블
CREATE TABLE purchase_return (
    pur_re_id INT AUTO_INCREMENT PRIMARY KEY,
    pur_re_date_time DATETIME,
    store_id INT,
    FOREIGN KEY (store_id) REFERENCES store(store_id)
);

-- 매입환불내역 테이블
CREATE TABLE purchase_return_record (
    pur_re_record_id INT AUTO_INCREMENT PRIMARY KEY,
    pur_re_id INT,
    prod_id INT,
    quantity SMALLINT,
    FOREIGN KEY (pur_re_id) REFERENCES purchase_return(pur_re_id),
    FOREIGN KEY (prod_id) REFERENCES product(prod_id)
);

-- 매출환불 테이블
CREATE TABLE sale_return (
    sale_re_id INT AUTO_INCREMENT PRIMARY KEY,
    sale_re_date_time DATETIME,
    store_id INT,
    FOREIGN KEY (store_id) REFERENCES store(store_id)
);

-- 매출환불내역 테이블
CREATE TABLE sale_return_record (
    sale_re_record_id INT AUTO_INCREMENT PRIMARY KEY,
    sale_re_id INT,
    prod_id INT,
    quantity SMALLINT,
    FOREIGN KEY (sale_re_id) REFERENCES sale_return(sale_re_id),
    FOREIGN KEY (prod_id) REFERENCES product(prod_id)
);
